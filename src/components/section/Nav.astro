---
const { t } = Astro.props;
---

<nav aria-label="Main Navigation" class="navbar">
	<div class="nav-container">
		<div class="nav-logo">
			<span class="nav-title">{t.title}</span>
		</div>
		<button class="hamburger" aria-label="Toggle menu" aria-expanded="false">
			<span class="hamburger-line"></span>
			<span class="hamburger-line"></span>
			<span class="hamburger-line"></span>
		</button>
		<div class="nav-menu" id="nav-menu">
			<a href="#data" class="nav-link">{t.data}</a>
			<a href="#info" class="nav-link">{t.info}</a>
			<a href="#plan" class="nav-link">{t.plan}</a>
			<a href="/en" class="nav-link lang-switch">{t.langChange}</a>
			<a href="#contact" class="nav-link contact-btn">{t.contact}</a>
			<button class="nav-link export-btn">{t.export}</button>
		</div>
	</div>
</nav>

<style>
	.navbar {
		position: fixed;
		top: 0;
		left: 0;
		right: 0;
		z-index: 1000;
		background: rgba(250, 250, 252, 0.8);
		backdrop-filter: blur(10px);
		-webkit-backdrop-filter: blur(10px);
	}

	.nav-container {
		display: flex;
		height: 4rem;
		padding: 1rem 16rem;
		flex-direction: row;
		justify-content: space-between;
		align-items: center;
		gap: 0.5rem;
		flex-shrink: 0;
		margin: 0 auto;
		max-width: 100vw;
	}

	.nav-logo {
		display: flex;
		align-items: center;
	}

	.nav-title {
		font-size: 1.125rem;
		font-weight: 600;
		color: #000000;
		text-decoration: none;
	}

	.nav-menu {
		display: flex;
		align-items: center;
		gap: 0.5rem;
	}

	.nav-link {
		font-size: 1rem;
		color: #000000;
		text-decoration: none;
		padding: 0.1rem 0.5rem;
		border-radius: 5rem;
		transition: all 0.2s ease;
		border: none;
	}

	.nav-link:hover {
		background-color: rgba(232, 232, 237, 0.6);
	}

	.contact-btn {
		background-color: #00d959;
		color: #000000;
		padding: 0.1rem 1rem;
	}

	.contact-btn:hover {
		background-color: #00b348;
	}

	.export-btn {
		background-color: #e8e8ed;
		color: #000000;
		padding: 0.1rem 1rem;
	}

	.export-btn:hover {
		background-color: #d0d0d5;
	}

	/* Hamburger Menu */
	.hamburger {
		display: none;
		flex-direction: column;
		justify-content: space-around;
		width: 1.5rem;
		height: 1.5rem;
		background: transparent;
		border: none;
		cursor: pointer;
		padding: 0;
		z-index: 1001;
	}

	.hamburger-line {
		width: 1.5rem;
		height: 0.15rem;
		background-color: #000000;
		transition: all 0.3s ease;
		transform-origin: center;
	}

	.hamburger.active .hamburger-line:nth-child(1) {
		transform: rotate(45deg) translate(0.35rem, 0.35rem);
	}

	.hamburger.active .hamburger-line:nth-child(2) {
		opacity: 0;
	}

	.hamburger.active .hamburger-line:nth-child(3) {
		transform: rotate(-45deg) translate(0.35rem, -0.35rem);
	}

	/* Responsive design */
	@media (max-width: 1280px) {
		.nav-container {
			width: 100%;
			padding: 1rem 2rem;
		}
	}

	@media (max-width: 768px) {
		.nav-container {
			padding: 1rem 1rem;
		}

		.hamburger {
			display: flex;
		}

		.nav-menu {
			position: fixed;
			top: 4rem;
			left: 0;
			right: 0;
			background: rgba(250, 250, 252, 0.95);
			backdrop-filter: blur(10px);
			-webkit-backdrop-filter: blur(10px);
			flex-direction: column;
			padding: 1rem;
			gap: 0.5rem;
			opacity: 0;
			visibility: hidden;
			transition:
				opacity 0.3s ease,
				visibility 0.3s ease;
			border-top: 1px solid rgba(232, 232, 237, 0.6);
			height: calc(100vh - 4rem);
		}

		.nav-menu.active {
			opacity: 1;
			visibility: visible;
		}

		.nav-link {
			font-size: 1rem;
			padding: 0.75rem 1rem;
			width: 100%;
			text-align: center;
			border-radius: 0.5rem;
		}

		.nav-title {
			font-size: 1rem;
		}

		.contact-btn,
		.export-btn {
			margin: 0.25rem 0;
		}
	}

	@media (max-width: 480px) {
		.nav-container {
			padding: 1rem 1rem;
		}

		.nav-menu {
			top: 4rem;
		}

		.nav-link {
			font-size: 0.9rem;
			padding: 0.5rem 1rem;
		}
	}
</style>

<script>
	document.addEventListener("DOMContentLoaded", () => {
		const hamburger = document.querySelector(".hamburger");
		const navMenu = document.querySelector(".nav-menu");

		if (hamburger && navMenu) {
			hamburger.addEventListener("click", () => {
				const isExpanded = hamburger.getAttribute("aria-expanded") === "true";

				hamburger.setAttribute("aria-expanded", String(!isExpanded));
				hamburger.classList.toggle("active");
				navMenu.classList.toggle("active");
			});
		}
	});
</script>

---
const { t } = Astro.props;

import plansData from "../../data/plans_data.json";
---

<section id="plans">
	<h2>{t.title}</h2>
	<div class="container">
		<div class="plans-table">
			<div class="plans-header">
				{
					plansData.tiers.map((tier: any) => (
						<div class="tier-column">
							<div class="tier-name" style={`color: ${tier.textColor}`}>
								{t.tire_names[tier.name]}
							</div>
							<div class="tier-price">{tier.price}</div>
						</div>
					))
				}
			</div>

			<div class="plans-content">
				{
					plansData.rows.map((row: any) => (
						<div class="plan-row" data-row-id={row.id}>
							{row.values.map((value: any, index: number) => (
								<div class={`plan-cell ${value.main !== "—" && value.main !== "" ? "clickable" : ""}`}>
									{value.icon && <div class="cell-icon">{value.icon}</div>}
									<div class={`cell-main ${/^([1-9]|10)\s*(份|張|次)$/.test(value.main) ? "cell-number" : "cell-text"}`}>{value.main}</div>{" "}
									{value.sub && <div class="cell-sub">{value.sub}</div>}
								</div>
							))}
						</div>
					))
				}
			</div>
		</div>
	</div>
</section>

<script>
	import { isItemInterested, addInterestedItem, removeInterestedItem, type InterestedItem } from "../../utils/local-storage.ts";

	function updateHighlighting() {
		const planRows = document.querySelectorAll(".plan-row");
		planRows.forEach(row => {
			const rowIdStr = row.getAttribute("data-row-id");
			if (rowIdStr) {
				const rowId = parseInt(rowIdStr);
				const isHighlighted = isItemInterested(rowId);
				
				const clickableCells = row.querySelectorAll(".plan-cell.clickable");
				clickableCells.forEach(cell => {
					if (isHighlighted) {
						cell.classList.add("highlighted");
					} else {
						cell.classList.remove("highlighted");
					}
				});
			}
		});
	}

	function handleCellClick(event: Event) {
		const cell = event.currentTarget as HTMLElement;
		const row = cell.closest(".plan-row") as HTMLElement;
		const rowIdStr = row?.getAttribute("data-row-id");

		if (rowIdStr) {
			const rowId = parseInt(rowIdStr);
			
			// Find the first non-empty, non-"—" value to use as the title
			const values = Array.from(row.querySelectorAll(".plan-cell .cell-main"));
			const titleElement = values.find(val => {
				const text = val.textContent?.trim() || "";
				return text !== "" && text !== "—";
			});
			const subElement = Array.from(row.querySelectorAll(".plan-cell .cell-sub")).find(sub => sub.textContent?.trim());
			
			const title = titleElement?.textContent?.trim() || "Plan Feature";
			const subtitle = subElement?.textContent?.trim() || "";
			
			if (isItemInterested(rowId)) {
				removeInterestedItem(rowId);
			} else {
				const planItem: InterestedItem = {
					id: rowId,
					title: title,
					category: "plan",
					image: "",
					deadline: subtitle
				};
				addInterestedItem(planItem);
			}

			updateHighlighting();
		}
	}

	document.addEventListener("DOMContentLoaded", function() {
		updateHighlighting();

		const clickableCells = document.querySelectorAll(".plan-cell.clickable");
		clickableCells.forEach(cell => {
			cell.addEventListener("click", handleCellClick);
		});
	});

	window.addEventListener("itemsChange", updateHighlighting);
	document.addEventListener("interested-items-changed", updateHighlighting);
</script>

<style>
	section {
		background-color: var(--items-bg);
		padding: 5rem 0;
	}
	.container {
		max-width: 100rem;
		border-radius: 2rem;
		background-color: var(--white);
		width: calc(100% - 4rem);
		margin: 0 auto;
		padding: 5rem;
		flex: auto;
		display: flex;
		justify-content: center;
	}

	h2 {
		font-size: 3rem;
		color: var(--black);
		text-align: center;
		margin-bottom: 3rem;
		font-weight: 700;
	}

	.plans-table {
		max-width: 1200px;
		background-color: var(--white);
		border-radius: 2rem;
		overflow: hidden;
		padding: 2rem;
	}

	.plans-header {
		display: grid;
		grid-template-columns: repeat(4, 1fr);
		gap: 2rem;
		margin-bottom: 2rem;
		padding-bottom: 2rem;
	}

	.tier-column {
		text-align: center;
		position: relative;
	}

	.tier-column::after {
		content: "";
		position: absolute;
		bottom: -2rem;
		left: 10%;
		right: 10%;
		height: 1px;
		background-color: var(--border-light);
	}

	.tier-name {
		font-size: 3rem;
		font-weight: 700;
		margin-bottom: 0.5rem;
		line-height: 1.2;
	}

	.tier-price {
		font-size: 2rem;
		font-weight: 600;
		color: var(--black);
	}

	.plans-content {
		display: grid;
		gap: 1rem;
	}

	.plan-row {
		display: grid;
		grid-template-columns: repeat(4, 1fr);
		gap: 2rem;
		padding: 1rem 0;
	}

	.plan-cell {
		text-align: center;
		display: flex;
		flex-direction: column;
		align-items: center;
		gap: 0.5rem;
	}

	.plan-cell.clickable {
		cursor: pointer;
		transition: all 0.2s ease;
		border-radius: 0.5rem;
		padding: 0.5rem;
	}

	.plan-cell.clickable:hover {
		background-color: var(--container);
		scale: 1.05;
	}

	.plan-cell.highlighted {
		background-color: var(--items-green);
		color: white;
	}

	.plan-cell.highlighted .cell-main,
	.plan-cell.highlighted .cell-sub,
	.plan-cell.highlighted .cell-icon {
		color: white;
	}

	.cell-icon {
		font-size: 1.5rem;
		margin-bottom: 0.25rem;
	}

	.cell-main {
		line-height: 1.3;
	}

	.cell-number {
		font-size: 2rem;
		font-weight: bold;
		color: var(--black);
	}

	.cell-text {
		font-size: 1rem;
		font-weight: normal;
		color: var(--black);
	}

	.cell-sub {
		font-size: 1rem;
		color: var(--black);
		line-height: 1.2;
	}

	@media (max-width: 1024px) {
		.plans-table {
			width: (100% - 2rem);
			overflow-x: auto;
			padding: 1.5rem;
		}

		.tier-name {
			font-size: 2rem;
		}

		.tier-price {
			font-size: 1.5rem;
		}

		.plans-header,
		.plan-row {
			min-width: 800px;
		}

		h2 {
			font-size: 2.5rem;
		}
	}

	@media (max-width: 768px) {
		.container {
			width: (100% - 2rem);
			padding: 2rem 1rem;
		}

		.plans-table {
			padding: 1rem;
		}

		h2 {
			font-size: 2rem;
			margin-bottom: 2rem;
		}

		.tier-name {
			font-size: 1.2rem;
		}

		.tier-price {
			font-size: 1rem;
		}

		.plans-header,
		.plan-row {
			gap: 1rem;
			min-width: 600px;
		}

		.cell-main {
			font-size: 0.9rem;
		}

		.cell-sub {
			font-size: 0.8rem;
		}
	}

	@media (max-width: 480px) {
		section {
			width: (100% - 2rem);
			padding: 2rem 0;
		}

		h2 {
			font-size: 1.8rem;
		}

		.plans-table {
			padding: 0.75rem;
		}

		.plans-header,
		.plan-row {
			min-width: 500px;
		}
	}
</style>

---
import { X, Plus } from "@lucide/astro";
const { title, background, btnText, hero = true, id = Math.random().toString(36).slice(2, 9) } = Astro.props;
---

<div class="detail-btn" id={id}>
	<div class="text">{btnText}</div>
	<div class="plus"><Plus stroke-width={3} /></div>
</div>

<div class="popup-bg">
	<div class="popup">
		<div class={hero ? "popup-hero" : "popup-hero no-hero"}>
			{title && <h2>{title}</h2>}
			{hero && background && <img src={background} alt="Popup Background" />}
		</div>
		<slot />
		<div class="close-btn"><X stroke-width={3} /></div>
	</div>
</div>
<style is:global>
	.aos ~ .detail-btn {
		opacity: 0;
		transition: opacity 0.5s ease-in-out;
	}

	.aos.appeared ~ .detail-btn,
	.aos.over ~ .detail-btn {
		opacity: 1;
	}
</style>
<style>
	.detail-btn,
	.close-btn {
		display: flex;
		justify-content: center;
		align-items: center;
		border-radius: 10rem;
		box-shadow: 0 0 1px 0 rgba(0, 0, 0, 0.11) inset;
		backdrop-filter: blur(3.5px);
		background-color: #e8e8ed;
		width: fit-content;
		cursor: pointer;
		position: sticky;
		bottom: 2rem;
		left: 50%;
		transform: translateX(-50%);
		z-index: 10;
	}

	.detail-btn {
		padding: 0.62rem 0.7rem 0.62rem 1.88rem;
		gap: 1.125rem;
	}
	.close-btn {
		width: 3.5rem;
		aspect-ratio: 1 / 1;
		bottom: 0;
	}

	.detail-btn .plus {
		display: flex;
		justify-content: center;
		align-items: center;
		background-color: #0171e3;
		color: #cce3f9;
		width: 2.25rem;
		height: 2.25rem;
		border-radius: 50%;
	}

	.popup-bg {
		position: fixed;
		inset: 0;
		width: 100%;
		height: 100%;
		background-color: rgba(0, 0, 0, 0.48);
		backdrop-filter: blur(10px);
		z-index: 100;
		overflow: scroll;
		padding: 4rem 2.25rem 2.25rem;
		opacity: 0;
		pointer-events: none;
		display: none;
		transition: 0.3s ease-in-out;
	}

	.show {
		opacity: 1;
		pointer-events: auto;
	}

	.popup {
		background-color: var(--container);
		border-radius: 25px;
		box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
		max-width: 1200px;
		width: 100%;
		margin: auto;
		min-height: calc(100vh -);
		transform: translateY(5rem);
		transition: 0.3s ease-in-out;
		position: relative;
		padding-bottom: 2rem;
	}

	.show .popup {
		opacity: 1;
		transform: translateY(0rem);
	}

	.popup-hero {
		height: 25rem;
		padding: 7rem 5rem 3rem;
		position: relative;
	}

	.no-hero {
		height: unset;
		padding: 2rem 5rem;
	}

	.popup-hero img {
		width: 100%;
		height: 100%;
		position: absolute;
		border-radius: 25px 25px 0 0;
		top: 0;
		left: 0;
		object-fit: cover;
		background-color: var(--gray);
		color: transparent;
	}

	.popup-hero h2 {
		color: var(--white);
		font-size: 4rem;
		position: relative;
		z-index: 1;
	}
</style>
<script define:vars={{ id }}>
	const btn = document.getElementById(id);
	const popupBg = document.querySelector(`#${id} + .popup-bg`);
	const closeBtn = popupBg.querySelector(".close-btn");

	btn.addEventListener("click", () => {
		popupBg.style.display = "block";
		setTimeout(() => {
			popupBg.scrollTo({
				top: 0
			});
			popupBg.classList.add("show");
		}, 0);
	});

	closeBtn.addEventListener("click", () => {
		popupBg.classList.remove("show");
		setTimeout(() => {
			popupBg.style.display = "none";
		}, 300);
	});
</script>
